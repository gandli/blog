name: Translate Markdown Posts

on:
  push:
    paths:
      - 'content/**/*.md'
      - '!content/**/*_en.md'
  workflow_dispatch:
    inputs:
      file_path:
        description: 'Optional - Specific file to translate (e.g. content/post.md)'
        required: false
        default: ''

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      files_to_translate: ${{ steps.detect.outputs.files }}
      has_files: ${{ steps.detect.outputs.has_files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect untranslated files
        id: detect
        run: |
          input_file="${{ github.event.inputs.file_path }}"
          result=()

          if [[ -n "$input_file" ]]; then
            if [[ -f "$input_file" && ! "$input_file" =~ _en\.md$ ]]; then
              base="${input_file%.*}"
              if [[ ! -f "${base}_en.md" ]]; then
                result+=("$input_file")
              fi
            fi
          else
            while IFS= read -r -d '' file; do
              base="${file%.*}"
              if [[ ! -f "${base}_en.md" ]]; then
                result+=("$file")
              fi
            done < <(find content -name "*.md" ! -name "*_en.md" -print0)
          fi

          if [[ ${#result[@]} -gt 0 ]]; then
            echo "files=$(jq -cn --argjson arr "$(printf '%s\n' "${result[@]}" | jq -R . | jq -s .)" '$arr')" >> "$GITHUB_OUTPUT"
            echo "has_files=true" >> "$GITHUB_OUTPUT"
          else
            echo "files=[]" >> "$GITHUB_OUTPUT"
            echo "has_files=false" >> "$GITHUB_OUTPUT"
          fi

  translate:
    needs: prepare
    if: needs.prepare.outputs.has_files == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai python-dotenv

      - name: Translate Markdown files
        env:
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        run: |
          files=$(echo '${{ needs.prepare.outputs.files_to_translate }}' | jq -r '.[]')
          for file in $files; do
            echo "üîç Translating $file"
            python .github/scripts/translate_markdown.py "$file"
          done

      - name: Commit and push translations
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git add content/**/*_en.md

          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit"
          else
            git commit -m "Auto-translate: Added English versions [skip ci]"
            git push origin "HEAD:${{ github.ref_name }}"
            echo "üöÄ Translations pushed"
          fi
