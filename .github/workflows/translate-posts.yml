name: Translate Markdown Posts

on:
  push:
    paths:
      - 'content/**/*.md'
      - '!content/**/*_en.md'  # 排除已翻译的文件
  workflow_dispatch:  # 手动触发
    inputs:
      file_path:
        description: 'Optional - Specific file path to translate (e.g. content/my_post.md)'
        required: false
        default: ''

jobs:
  check-untranslated:
    runs-on: ubuntu-latest
    outputs:
      has_untranslated: ${{ steps.check-files.outputs.has_untranslated }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find untranslated files
        id: check-files
        run: |
          # 查找所有未翻译的Markdown文件
          files=$(find content -name "*.md" ! -name "*_en.md")
          
          # 检查每个文件是否有对应的翻译版本
          untranslated_files=()
          for file in $files; do
            base="${file%.*}"
            if [[ ! -f "${base}_en.md" ]]; then
              untranslated_files+=("$file")
            fi
          done
          
          # 设置输出变量
          if [ ${#untranslated_files[@]} -gt 0 ]; then
            echo "Found untranslated files: ${untranslated_files[@]}"
            echo "has_untranslated=true" >> $GITHUB_OUTPUT
          else
            echo "No untranslated files found"
            echo "has_untranslated=false" >> $GITHUB_OUTPUT
          fi

  translate:
    needs: check-untranslated
    if: needs.check-untranslated.outputs.has_untranslated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai python-dotenv

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            content/**/*.md
            !content/**/*_en.md

      - name: Get untranslated files
        id: untranslated-files
        run: |
          # 查找所有未翻译的Markdown文件
          files=$(find content -name "*.md" ! -name "*_en.md")
          
          # 筛选出没有对应翻译版本的文件
          untranslated_files=()
          for file in $files; do
            base="${file%.*}"
            if [[ ! -f "${base}_en.md" ]]; then
              untranslated_files+=("$file")
            fi
          done
          
          echo "files_to_translate=${untranslated_files[@]}" >> $GITHUB_OUTPUT

      - name: Translate Markdown files
        env:
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        run: |
          # 使用数组存储文件列表，正确处理带空格的文件名
          files=()
          while IFS= read -r -d '' file; do
            files+=("$file")
          done < <(find content -name "*.md" ! -name "*_en.md" -print0)
          
          # 检查每个文件是否有对应的翻译版本
          for file in "${files[@]}"; do
            base="${file%.*}"
            if [[ ! -f "${base}_en.md" ]]; then
              echo "🔍 发现未翻译文件: $file"
              python .github/scripts/translate_markdown.py "$file"
            else
              echo "⏩ 跳过已翻译文件: $file"
            fi
          done
